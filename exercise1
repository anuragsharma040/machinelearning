import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import joblib

# Load your data
# Replace 'path/to/your/data.csv' with the actual path to your CSV file
file_path = 'path/to/your/data.csv'
df = pd.read_csv(file_path)

# Separate features (X) and target (y)
X = df.drop('Output', axis=1)
y = df['Output']

# Encode categorical columns (convert text to numerical values)
df_encoded = pd.get_dummies(df[['SenderBic', 'ReceiverBic', 'Direction', 'MsgBody', 'Tag20']])

# Combine encoded features with numerical features
X = pd.concat([df[['MT']], df_encoded], axis=1)

# Target variable
y = df['Output']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a RandomForestClassifier model
model = RandomForestClassifier(random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
predictions = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, predictions)
print(f"Accuracy: {accuracy}")

# Example: Make a prediction for a new data point
new_data_point = pd.DataFrame({
    'MT': [107],
    'SenderBic_JANARDAN': [0],
    'ReceiverBic_JAYARAMAN': [1],
    'Direction_I': [1],
    'MsgBody_SOMEONE AMERICAN': [1],
    'Tag20_ABC': [1]
})

predicted_output = model.predict(new_data_point)
print(f"Predicted Output: {predicted_output[0]}")
