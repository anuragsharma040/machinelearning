import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import joblib

# Load your data
# Replace 'path/to/your/data.csv' with the actual path to your CSV file
file_path = 'path/to/your/data.csv'
df = pd.read_csv(file_path)

# Separate features (X) and target (y)
X = df.drop('Output', axis=1)
y = df['Output']

# Label encode categorical columns
label_encoder = LabelEncoder()
df['SenderBic'] = label_encoder.fit_transform(df['SenderBic'])
df['ReceiverBic'] = label_encoder.fit_transform(df['ReceiverBic'])
df['Direction'] = label_encoder.fit_transform(df['Direction'])
df['MsgBody'] = label_encoder.fit_transform(df['MsgBody'])
df['Tag20'] = label_encoder.fit_transform(df['Tag20'])
df['Output'] = label_encoder.fit_transform(df['Output'])

# Features
X = df[['SenderBic', 'ReceiverBic', 'MT', 'Direction', 'MsgBody', 'Tag20']]

# Target variable
y = df['Output']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a RandomForestClassifier model
model = RandomForestClassifier(random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
predictions = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, predictions)
print(f"Accuracy: {accuracy}")

# Example: Make a prediction for a new data point
new_data_point = pd.DataFrame({
    'SenderBic': [label_encoder.transform(['JANARDAN'])[0]],
    'ReceiverBic': [label_encoder.transform(['JAYARAMAN'])[0]],
    'MT': [107],
    'Direction': [label_encoder.transform(['I'])[0]],
    'MsgBody': [label_encoder.transform(['SOMEONE AMERICAN'])[0]],
    'Tag20': [label_encoder.transform(['ABC'])[0]]
})

predicted_output = model.predict(new_data_point)
print(f"Predicted Output: {label_encoder.inverse_transform(predicted_output)[0]}")
